# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def removeNthFromEnd(self, head, n):
        """
        :type head: ListNode
        :type n: int
        :rtype: ListNode
        """
        if not head:
            return None
        slow = head
        
        count = 0
        while slow:
            slow= slow.next            
            count = count+1
        index = count-n
        slow = head
        if index ==0:
            head = head.next
            return head
        else:
            for i in range(index-1):
                slow= slow.next
            if slow.next:
                slow.next = slow.next.next
            return head
            
